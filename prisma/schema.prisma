// schema.prisma
generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
    id        Int      @id @default(autoincrement())
    email     String   @unique
    name      String
    image     String?
    password  String
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @default(now()) @map("updated_at")
    events    Event[]  @relation("organizer")

    @@map("users")
}

model Event {
    id           Int        @id @default(autoincrement())
    title        String
    description  String?
    createdAt    DateTime   @default(now()) @map("created_at")
    startDate    DateTime   @map("start_date")
    startTime    DateTime   @map("start_time")
    endDate      DateTime?  @map("end_date")
    endTime      DateTime?  @map("end_time")
    locationType String     @map("location_type")
    location     String?
    onlineLink   String?    @map("online_link")
    banner       String?    @map("banner_url")
    isFree       Boolean    @map("is_free")
    price        Float?
    capacity     Int?
    organizer    User       @relation("organizer", fields: [userId], references: [id])
    userId       Int        @map("user_id")
    tags         Tag[]      @relation("tags")
    attendees    Attendee[]

    @@map("events")
}

model Tag {
    id          Int     @id @default(autoincrement())
    name        String
    description String
    events      Event[] @relation("tags")

    @@map("tags")
}

model Attendee {
    id      Int    @id @default(autoincrement())
    event   Event  @relation(fields: [eventId], references: [id])
    eventId Int    @map("event_id")
    status  String

    @@map("attendees")
}
